{"version":3,"file":"commoncomponents-selectiontabwithscrollablemenu.2dc9cb63.bundle.js","mappings":"kWAAA,E,ybAAA,YAEA,eACA,YACA,e,opCAGA,IAAMA,EAA2BC,EAAAA,QAAOC,IAAV,+GAAGD,CAAH,MAExBE,EAAOF,EAAAA,QAAOC,IAAV,2FAAGD,CAAH,kBACC,SAAAG,GAAK,MAAgB,UAAdA,EAAMC,OAAiB,QAAQ,UAG5BC,EAAAA,SAAAA,I,6BAEnB,WAAYF,GAAO,mCACjB,cAAMA,IACDG,MAAQ,CACXC,KAAM,EAAKJ,MAAMI,KACjBC,oBAAoB,IACpBC,QAAQ,EAAKC,4BALE,E,sDASjB,WACE,IAAIC,GAAyB,EAE7B,IACkC,oBAAtBH,qBAAsCA,wBAC9CG,GAAyB,GAE5B,MAAMC,GACLC,QAAQC,IAAIF,GAEdG,KAAKC,SAAL,OAAkBD,KAAKT,OAAvB,IAA8BE,oBAAoBG,O,sCAIpD,WACE,IAAI,IAAIM,EAAE,EAAG,UAAAF,KAAKZ,aAAL,SAAYI,MAAQU,GAAC,UAACF,KAAKZ,aAAN,iBAAC,EAAYI,YAAb,aAAC,EAAkBW,QAAOD,IAAI,eAC9D,GAA8B,YAA3B,UAAAF,KAAKZ,aAAL,mBAAYI,YAAZ,eAAkBH,QACnB,OAAOa,EAGX,OAAO,I,4BAIX,SAAeE,GACb,IAAIC,GAAW,EAAH,WAAOL,KAAKT,MAAMC,MAC9Ba,EAASC,SAAQ,SAACC,GAChBA,EAAQlB,OAAS,MAEnBgB,EAASD,GAAOf,OAAS,SACzBW,KAAKC,SAAL,OACKD,KAAKT,OADV,IAEEC,KAAMa,EACNX,QAAQU,O,oBAIZ,WAAS,WAGP,OACE,gDACmC,MAAjCJ,KAAKT,MAAME,qBAA6BO,KAAKT,MAAME,qBAAyB,wBAAC,EAAAe,aAAD,KAC7ER,KAAKT,MAAMC,KAAKiB,KAAI,SAACF,EAASH,GACzB,OACE,wBAAC,EAAAM,WAAD,KACE,wBAAC,UAAD,CAAYC,WAAYJ,EAAQK,QAC9BvB,OAA0B,UAAlBkB,EAAQlB,OAAqB,SAAW,GAChDwB,QAAS,SAACC,GAAD,OAAK,EAAKC,eAAeD,IAClCV,MAAOA,UAOjBJ,KAAKT,MAAME,qBAAwD,MAAjCO,KAAKT,MAAME,qBAChD,wBAAC,EAAAuB,SAAD,KACG,kCAAQC,SAAU,SAACH,GAAD,OAAK,EAAKC,eAAeD,EAAEI,OAAOC,iBACjDnB,KAAKT,MAAMC,KAAKiB,KAAI,SAACF,EAASH,GAAV,OACjB,kCAAQgB,IAAKhB,EAAOA,MAAOA,GAASG,EAAQK,QAA5C,UAKN,wBAAC5B,EAAD,KACE,wBAACG,EAAD,CAAME,OAAO,UACTW,KAAKZ,MAAMiC,UAAYrB,KAAKZ,MAAMiC,SAASrB,KAAKT,MAAMG,SAAUM,KAAKZ,MAAMiC,SAASrB,KAAKT,MAAMG,SAAS,Y,EA9EjGJ,CAAkCgC,EAAAA,W","sources":["webpack://1at06cs097/./commonComponents/SelectionTabWithScrollableMenu.js"],"sourcesContent":["import React, { Component } from 'react'\n//import { toJS } from 'mobx';\nimport MenuButton from './MenuButton';\nimport { SliderStyled, SliderItem, DropDown } from './general/style/style';\nimport styled from 'styled-components';\n//import { toJS } from 'mobx';\n\nconst SelectionTabContentItems = styled.div``;\n\nconst Item = styled.div`\ndisplay: ${props=>props.active=='active'?'block':'none'};\n`;\n\nexport default class SelectionTabWithComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabs: this.props.tabs,\n      isCarouselSupported:\"#\",\n      currAcc:this.getCurrentActiveTabIndex()\n    };\n  }\n\n    componentDidMount() {\n      let tmpIsCarouselSupported = true;\n  \n      try{\n        if(typeof(isCarouselSupported)!=\"undefined\" && !isCarouselSupported()){\n          tmpIsCarouselSupported = false;\n        }\n      }catch(err){\n        console.log(err);\n      }\n      this.setState({...this.state, isCarouselSupported:tmpIsCarouselSupported});\n    }\n\n\n    getCurrentActiveTabIndex(){\n      for(let i=0; this.props?.tabs && i<this.props?.tabs?.length;i++){\n        if(this.props?.tabs?.active===\"active\"){\n          return i;\n        }\n      }\n      return 0;\n    }\n  \n\n  handleTabClick(index){\n    let tempTabs = [...this.state.tabs];\n    tempTabs.forEach((element) => {\n      element.active = \"\";\n    });\n    tempTabs[index].active = \"active\";\n    this.setState({\n      ...this.state,\n      tabs: tempTabs,\n      currAcc:index\n    });\n  }\n  \n  render() {\n    // console.log('SelectionTabWithComponent:props ',toJS(this.props.children));\n\n    return (\n      <>\n      {(this.state.isCarouselSupported!==\"#\" && this.state.isCarouselSupported) && (<SliderStyled>\n      {this.state.tabs.map((element, index) => {\n            return (\n              <SliderItem>\n                <MenuButton buttonName={element.tabName} \n                  active={element.active == \"active\" ? \"active\" : \"\"}\n                  onClick={(e)=>this.handleTabClick(e)}\n                  index={index}\n                />\n              </SliderItem>\n            )}\n      )}\n      </SliderStyled>)}\n\n     {(!this.state.isCarouselSupported && this.state.isCarouselSupported!==\"#\") && (\n     <DropDown>\n        <select onChange={(e)=>this.handleTabClick(e.target.selectedIndex)}>\n          {this.state.tabs.map((element, index) => (\n              <option key={index} index={index} >{element.tabName} </option>)\n      )}\n        </select>\n      </DropDown>)}\n\n        <SelectionTabContentItems>\n          <Item active='active'>\n            {(this.props.children && this.props.children[this.state.currAcc])?this.props.children[this.state.currAcc]:null}\n          </Item>\n        </SelectionTabContentItems>\n      </>\n)\n}\n}\n\n\n\n\n\n"],"names":["SelectionTabContentItems","styled","div","Item","props","active","SelectionTabWithComponent","state","tabs","isCarouselSupported","currAcc","getCurrentActiveTabIndex","tmpIsCarouselSupported","err","console","log","this","setState","i","length","index","tempTabs","forEach","element","SliderStyled","map","SliderItem","buttonName","tabName","onClick","e","handleTabClick","DropDown","onChange","target","selectedIndex","key","children","Component"],"sourceRoot":""}