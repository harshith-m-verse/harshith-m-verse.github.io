{"version":3,"file":"vendors-timeago.js.e69efecc.bundle.js","mappings":"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","sources":["webpack://1at06cs097/./node_modules/timeago.js/esm/lang/en_US.js","webpack://1at06cs097/./node_modules/timeago.js/esm/lang/zh_CN.js","webpack://1at06cs097/./node_modules/timeago.js/esm/register.js","webpack://1at06cs097/./node_modules/timeago.js/esm/utils/date.js","webpack://1at06cs097/./node_modules/timeago.js/esm/format.js","webpack://1at06cs097/./node_modules/timeago.js/esm/utils/dom.js","webpack://1at06cs097/./node_modules/timeago.js/esm/realtime.js","webpack://1at06cs097/./node_modules/timeago.js/esm/index.js"],"sourcesContent":["var EN_US = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['just now', 'right now'];\n    var unit = EN_US[Math.floor(idx / 2)];\n    if (diff > 1)\n        unit += 's';\n    return [diff + \" \" + unit + \" ago\", \"in \" + diff + \" \" + unit];\n}\n//# sourceMappingURL=en_US.js.map","var ZH_CN = ['秒', '分钟', '小时', '天', '周', '个月', '年'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['刚刚', '片刻后'];\n    var unit = ZH_CN[~~(idx / 2)];\n    return [diff + \" \" + unit + \"\\u524D\", diff + \" \" + unit + \"\\u540E\"];\n}\n//# sourceMappingURL=zh_CN.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n/**\n * All supported locales\n */\nvar Locales = {};\n/**\n * register a locale\n * @param locale\n * @param func\n */\nexport var register = function (locale, func) {\n    Locales[locale] = func;\n};\n/**\n * get a locale, default is en_US\n * @param locale\n * @returns {*}\n */\nexport var getLocale = function (locale) {\n    return Locales[locale] || Locales['en_US'];\n};\n//# sourceMappingURL=register.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nvar SEC_ARRAY = [\n    60,\n    60,\n    24,\n    7,\n    365 / 7 / 12,\n    12,\n];\n/**\n * format Date / string / timestamp to timestamp\n * @param input\n * @returns {*}\n */\nexport function toDate(input) {\n    if (input instanceof Date)\n        return input;\n    // @ts-ignore\n    if (!isNaN(input) || /^\\d+$/.test(input))\n        return new Date(parseInt(input));\n    input = (input || '')\n        // @ts-ignore\n        .trim()\n        .replace(/\\.\\d+/, '') // remove milliseconds\n        .replace(/-/, '/')\n        .replace(/-/, '/')\n        .replace(/(\\d)T(\\d)/, '$1 $2')\n        .replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\n        .replace(/([+-]\\d\\d):?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\n    return new Date(input);\n}\n/**\n * format the diff second to *** time ago, with setting locale\n * @param diff\n * @param localeFunc\n * @returns\n */\nexport function formatDiff(diff, localeFunc) {\n    /**\n     * if locale is not exist, use defaultLocale.\n     * if defaultLocale is not exist, use build-in `en`.\n     * be sure of no error when locale is not exist.\n     *\n     * If `time in`, then 1\n     * If `time ago`, then 0\n     */\n    var agoIn = diff < 0 ? 1 : 0;\n    /**\n     * Get absolute value of number (|diff| is non-negative) value of x\n     * |diff| = diff if diff is positive\n     * |diff| = -diff if diff is negative\n     * |0| = 0\n     */\n    diff = Math.abs(diff);\n    /**\n     * Time in seconds\n     */\n    var totalSec = diff;\n    /**\n     * Unit of time\n     */\n    var idx = 0;\n    for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {\n        diff /= SEC_ARRAY[idx];\n    }\n    /**\n     * Math.floor() is alternative of ~~\n     *\n     * The differences and bugs:\n     * Math.floor(3.7) -> 4 but ~~3.7 -> 3\n     * Math.floor(1559125440000.6) -> 1559125440000 but ~~1559125440000.6 -> 52311552\n     *\n     * More information about the performance of algebraic:\n     * https://www.youtube.com/watch?v=65-RbBwZQdU\n     */\n    diff = Math.floor(diff);\n    idx *= 2;\n    if (diff > (idx === 0 ? 9 : 1))\n        idx += 1;\n    return localeFunc(diff, idx, totalSec)[agoIn].replace('%s', diff.toString());\n}\n/**\n * calculate the diff second between date to be formatted an now date.\n * @param date\n * @param relativeDate\n * @returns {number}\n */\nexport function diffSec(date, relativeDate) {\n    var relDate = relativeDate ? toDate(relativeDate) : new Date();\n    return (+relDate - +toDate(date)) / 1000;\n}\n/**\n * nextInterval: calculate the next interval time.\n * - diff: the diff sec between now and date to be formatted.\n *\n * What's the meaning?\n * diff = 61 then return 59\n * diff = 3601 (an hour + 1 second), then return 3599\n * make the interval with high performance.\n **/\nexport function nextInterval(diff) {\n    var rst = 1, i = 0, d = Math.abs(diff);\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\n        diff /= SEC_ARRAY[i];\n        rst *= SEC_ARRAY[i];\n    }\n    d = d % rst;\n    d = d ? rst - d : rst;\n    return Math.ceil(d);\n}\n//# sourceMappingURL=date.js.map","import { formatDiff, diffSec } from './utils/date';\nimport { getLocale } from './register';\n/**\n * format a TDate into string\n * @param date\n * @param locale\n * @param opts\n */\nexport var format = function (date, locale, opts) {\n    // diff seconds\n    var sec = diffSec(date, opts && opts.relativeDate);\n    // format it with locale\n    return formatDiff(sec, getLocale(locale));\n};\n//# sourceMappingURL=format.js.map","var ATTR_TIMEAGO_TID = 'timeago-id';\n/**\n * get the datetime attribute, `datetime` are supported.\n * @param node\n * @returns {*}\n */\nexport function getDateAttribute(node) {\n    return node.getAttribute('datetime');\n}\n/**\n * set the node attribute, native DOM\n * @param node\n * @param timerId\n * @returns {*}\n */\nexport function setTimerId(node, timerId) {\n    // @ts-ignore\n    node.setAttribute(ATTR_TIMEAGO_TID, timerId);\n}\n/**\n * get the timer id\n * @param node\n */\nexport function getTimerId(node) {\n    return parseInt(node.getAttribute(ATTR_TIMEAGO_TID));\n}\n//# sourceMappingURL=dom.js.map","import { setTimerId, getTimerId, getDateAttribute } from './utils/dom';\nimport { formatDiff, diffSec, nextInterval } from './utils/date';\nimport { getLocale } from './register';\n// all realtime timer\nvar TIMER_POOL = {};\n/**\n * clear a timer from pool\n * @param tid\n */\nvar clear = function (tid) {\n    clearTimeout(tid);\n    delete TIMER_POOL[tid];\n};\n// run with timer(setTimeout)\nfunction run(node, date, localeFunc, opts) {\n    // clear the node's exist timer\n    clear(getTimerId(node));\n    var relativeDate = opts.relativeDate, minInterval = opts.minInterval;\n    // get diff seconds\n    var diff = diffSec(date, relativeDate);\n    // render\n    node.innerText = formatDiff(diff, localeFunc);\n    var tid = setTimeout(function () {\n        run(node, date, localeFunc, opts);\n    }, Math.min(Math.max(nextInterval(diff), minInterval || 1) * 1000, 0x7fffffff));\n    // there is no need to save node in object. Just save the key\n    TIMER_POOL[tid] = 0;\n    setTimerId(node, tid);\n}\n/**\n * cancel a timer or all timers\n * @param node - node hosting the time string\n */\nexport function cancel(node) {\n    // cancel one\n    if (node)\n        clear(getTimerId(node));\n    // cancel all\n    // @ts-ignore\n    else\n        Object.keys(TIMER_POOL).forEach(clear);\n}\n/**\n * render a dom realtime\n * @param nodes\n * @param locale\n * @param opts\n */\nexport function render(nodes, locale, opts) {\n    // by .length\n    // @ts-ignore\n    var nodeList = nodes.length ? nodes : [nodes];\n    nodeList.forEach(function (node) {\n        run(node, getDateAttribute(node), getLocale(locale), opts || {});\n    });\n    return nodeList;\n}\n//# sourceMappingURL=realtime.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nimport en_US from './lang/en_US';\nimport zh_CN from './lang/zh_CN';\nimport { register } from './register';\nregister('en_US', en_US);\nregister('zh_CN', zh_CN);\nexport { format } from './format';\nexport { render, cancel } from './realtime';\nexport { register };\n//# sourceMappingURL=index.js.map"],"names":["EN_US","ZH_CN","Locales","register","locale","func","getLocale","SEC_ARRAY","toDate","input","Date","isNaN","test","parseInt","trim","replace","formatDiff","diff","localeFunc","agoIn","totalSec","Math","abs","idx","length","floor","toString","diffSec","date","relativeDate","format","opts","ATTR_TIMEAGO_TID","getTimerId","node","getAttribute","TIMER_POOL","clear","tid","clearTimeout","run","minInterval","innerText","setTimeout","min","max","rst","i","d","ceil","nextInterval","timerId","setAttribute","setTimerId","cancel","Object","keys","forEach","render","nodes","nodeList","getDateAttribute","unit"],"sourceRoot":""}