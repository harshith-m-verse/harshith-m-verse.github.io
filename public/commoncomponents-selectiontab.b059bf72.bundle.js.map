{"version":3,"file":"commoncomponents-selectiontab.b059bf72.bundle.js","mappings":"uTAAA,eACA,eACA,Y,0cAGA,IAAMA,EAA2BC,EAAAA,QAAOC,IAAV,6FAAGD,CAAH,MAExBE,EAAOF,EAAAA,QAAOC,IAAV,yEAAGD,CAAH,kBACC,SAAAG,GAAK,MAAgB,UAAdA,EAAMC,OAAiB,QAAQ,U,EAG3CC,SAAAA,I,6BACJ,WAAYF,GAAO,mCACjB,cAAMA,IACDG,MAAQ,CACXC,KAAM,EAAKJ,MAAMI,KACjBC,QAAS,EAAKC,uBAJC,E,wDAQnB,WACE,IAAI,IAAIC,EAAE,EAAGC,MAAMC,QAAN,UAAcC,KAAKV,aAAnB,aAAc,EAAYI,OAASG,GAAC,UAACG,KAAKV,aAAN,iBAAC,EAAYI,YAAb,aAAC,EAAkBO,QAAOJ,IAAI,eAC7E,GAA8B,YAA3B,UAAAG,KAAKV,aAAL,mBAAYI,YAAZ,eAAkBH,QACnB,OAAOM,EAGX,OAAO,I,4BAGT,SAAeK,GACbA,EAAEC,iBACF,IAAIC,GAAW,EAAH,WAAOJ,KAAKP,MAAMC,MAC9BU,EAASC,SAAQ,SAACC,GAChBA,EAAQf,OAAS,MAEnBa,EAASF,EAAEK,cAAcC,QAAQC,OAAOlB,OAAS,SACjDS,KAAKU,SAAS,CACZhB,KAAMU,EACNT,QAAQO,EAAEK,cAAcC,QAAQC,U,oBAKpC,WAAS,aACDE,EAAOX,KAAKV,MAAMqB,KAExB,OACE,gDACE,wBAAC,EAAAC,gBAAD,CAAiBC,UAAU,kBAAkBC,iBAAkBd,KAAKV,MAAMwB,kBACvEd,KAAKP,MAAMC,KAAKqB,KAAI,SAACT,EAASG,GAAU,cACnC,OAAS,EAAKnB,MAAM0B,eAAX,UAA2B,EAAK1B,aAAhC,iBAA2B,EAAY0B,oBAAvC,aAA2B,EAA2BP,KAAsD,IAA5C,YAAKnB,aAAL,mBAAY0B,aAAaP,UAAzB,eAAiCQ,YACxG,wBAAC,EAAAC,QAAD,CAASC,MAAO,EAAK7B,MAAM8B,SAAUP,UAA6B,UAAlBP,EAAQf,OAAqB,oBAAsB,cACnG,aAAYkB,EACZY,QAAS,SAACnB,GAAD,OAAK,EAAKoB,eAAepB,KAChC,wBAAC,EAAAqB,WAAD,CAAYV,UAAU,IAAIP,MAAAA,GAA1B,UAA0BA,EAASkB,eAAnC,aAA0B,EAAmBb,SAMxD,wBAACzB,EAAD,KAC2D,IAA1D,UAAAc,KAAKV,aAAL,eAAY0B,aAAahB,KAAKP,MAAME,SAASsB,YAC3C,wBAAC5B,EAAD,CAAME,OAAO,UACPS,KAAKV,MAAMmC,UAAYzB,KAAKV,MAAMmC,SAASzB,KAAKP,MAAME,SAAYK,KAAKV,MAAMmC,SAASzB,KAAKP,MAAME,SAAS,Y,EApDtHH,CAAqBkC,EAAAA,QAAMC,W","sources":["webpack://1at06cs097/./commonComponents/SelectionTab.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {TabItem,TabMenuBtn, ConfigrableMenu} from './general/style/style';\n//import { toJS } from \"mobx\";\n\nconst SelectionTabContentItems = styled.div``;\n\nconst Item = styled.div`\ndisplay: ${props=>props.active=='active'?'block':'none'};\n`;\n\nclass SelectionTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabs: this.props.tabs,\n      currAcc: this.getCurrentActiveTab()\n    };\n  }\n\n  getCurrentActiveTab(){\n    for(let i=0; Array.isArray(this.props?.tabs) && i<this.props?.tabs?.length;i++){\n      if(this.props?.tabs?.active===\"active\"){\n        return i;\n      }\n    }\n    return 0;\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    let tempTabs = [...this.state.tabs];\n    tempTabs.forEach((element) => {\n      element.active = \"\";\n    });\n    tempTabs[e.currentTarget.dataset.index].active = \"active\";\n    this.setState({\n      tabs: tempTabs,\n      currAcc:e.currentTarget.dataset.index\n    });\n  }\n\n\n  render() {\n    const lang = this.props.lang;\n\n    return (\n      <>\n        <ConfigrableMenu className='Border theme-Bg' isScrollableTabs={this.props.isScrollableTabs}>\n          {this.state.tabs.map((element, index) => {\n                return ((this.props.contentItems && this.props?.contentItems?.[index] && this.props?.contentItems[index]?.loadError!=true) &&\n                  <TabItem color={this.props.tabColor} className={element.active == \"active\" ? \"tab-button active\" : \"tab-button \"}  \n                  data-index={index}\n                  onClick={(e)=>this.handleTabClick(e)}>\n                    <TabMenuBtn className=''>{element?.tabName?.[lang]}</TabMenuBtn>\n                  </TabItem>\n                )}\n          )}\n        </ConfigrableMenu>\n\n         <SelectionTabContentItems>\n         {this.props?.contentItems[this.state.currAcc].loadError != true &&\n            <Item active='active'>\n                {(this.props.children && this.props.children[this.state.currAcc]) ? this.props.children[this.state.currAcc]:null}\n            </Item>}\n        </SelectionTabContentItems>\n      </>\n    );\n  }\n}\n\nexport default SelectionTab;\n\n\n"],"names":["SelectionTabContentItems","styled","div","Item","props","active","SelectionTab","state","tabs","currAcc","getCurrentActiveTab","i","Array","isArray","this","length","e","preventDefault","tempTabs","forEach","element","currentTarget","dataset","index","setState","lang","ConfigrableMenu","className","isScrollableTabs","map","contentItems","loadError","TabItem","color","tabColor","onClick","handleTabClick","TabMenuBtn","tabName","children","React","Component"],"sourceRoot":""}