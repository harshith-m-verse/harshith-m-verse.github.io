{"version":3,"file":"utility-intersectionobserverhook.5aa817ec.bundle.js","mappings":"6MA8BO,SAAyBA,EAAMC,IACpC,IAAAC,YAAU,WACR,IAAIC,EAASH,EAAKI,QAClB,GAAGD,EAAO,CACR,IAAIE,EAdV,gBACmBC,IAAbD,IACFA,EAAW,IAAIE,qBAAqBC,EAAqB,CACvDC,WAAY,MACZC,UAAW,UAGf,OAAOL,EAOYM,GAIf,OAHAC,EAAkBC,IAAIV,EAAQF,GAC9BI,EAASS,QAAQX,GAEV,WACLS,EAAiB,OAAQT,GACzBE,EAASU,UAAUZ,OAGtB,KA3CL,IAIIE,EAJJ,YAEIO,EAAoB,IAAII,QAI5B,SAASR,EAAoBS,GAC3BA,EAAQC,SAAQ,SAAAC,GACd,GAAIP,EAAkBQ,IAAID,EAAMhB,QAAS,CACvC,IAAIkB,EAAKT,EAAkBU,IAAIH,EAAMhB,SAEjCgB,EAAMI,gBAAkBJ,EAAMK,kBAAoB,KACpDnB,EAASU,UAAUI,EAAMhB,QACzBS,EAAiB,OAAQO,EAAMhB,QAC/BkB","sources":["webpack://1at06cs097/./utility/intersectionObserverHook.js"],"sourcesContent":["import { useEffect } from 'react';\n\nlet listenerCallbacks = new WeakMap();\n\nlet observer;\n\nfunction handleIntersections(entries) {\n  entries.forEach(entry => {\n    if (listenerCallbacks.has(entry.target)) {\n      let cb = listenerCallbacks.get(entry.target);\n\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\n        observer.unobserve(entry.target);\n        listenerCallbacks.delete(entry.target);\n        cb();\n      }\n    }\n  });\n}\n\nfunction getIntersectionObserver() {\n  if (observer === undefined) {\n    observer = new IntersectionObserver(handleIntersections, {\n      rootMargin: '0px',\n      threshold: '0.15',\n    });\n  }\n  return observer;\n}\n\nexport function useIntersection(elem, callback) {\n  useEffect(() => {\n    let target = elem.current;\n    if(target){\n      let observer = getIntersectionObserver();\n      listenerCallbacks.set(target, callback);\n      observer.observe(target);\n  \n      return () => {\n        listenerCallbacks.delete(target);\n        observer.unobserve(target);\n      };\n    }\n  }, []);\n}\n\n/*\n  const itemRef = useRef();\n  const [isInView, setIsInView] = useState(false);\n\n  useIntersection(itemRef, () => {\n    setIsInView(true);\n  });\n\n\n  render:\n      <div ref={itemRef}></div>\n\n  isView: true when div with ref=itemRef is visible on viewport otherwise false. \n*/"],"names":["elem","callback","useEffect","target","current","observer","undefined","IntersectionObserver","handleIntersections","rootMargin","threshold","getIntersectionObserver","listenerCallbacks","set","observe","unobserve","WeakMap","entries","forEach","entry","has","cb","get","isIntersecting","intersectionRatio"],"sourceRoot":""}