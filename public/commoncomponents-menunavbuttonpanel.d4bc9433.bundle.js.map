{"version":3,"file":"commoncomponents-menunavbuttonpanel.d4bc9433.bundle.js","mappings":"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","sources":["webpack://1at06cs097/./commonComponents/MenuNavButtonPanel.js"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport MenuNavButton from \"./MenuNavButton\";\nimport {DropDown, SliderStyled, SliderItem } from \"./general/style/style\";\n//import { toJS } from \"mobx\";\n\n\nclass MenuNavButtonPanel extends React.Component {\n  \n   constructor(props){\n    super(props);\n    this.state = {\n      activeNavIndex:this.getActiveIndex(),\n      isCarouselSupported:true,\n      isIosDevice:false\n    }\n  }\n\n\n  componentDidMount() {\n    let tmpIsIosDevice = false;\n    let tmpIsCarouselSupported = true;\n\n    try{\n      if(typeof(isIos)!==\"undefined\" && isIos()){\n        tmpIsIosDevice=true;  \n      }\n    }catch(err){\n      console.log(err);\n    }\n    \n    try{\n      if(typeof(isCarouselSupported)!=\"undefined\" && !isCarouselSupported()){\n        tmpIsCarouselSupported = false;\n      }\n    }catch(err){\n      console.log(err);\n    }\n\n    if(!tmpIsCarouselSupported || tmpIsIosDevice){\n      this.setState({\n        ...this.state,\n        isCarouselSupported:tmpIsCarouselSupported,\n        isIosDevice:tmpIsIosDevice\n      });\n    }\n\n  }\n  \n\n  getActiveIndex(){\n    const res = this.props.data && this.props.data.reduce((acc,curr,i)=>{\n      if(curr.active==\"active\" && acc.length==0){\n        acc.push(i);\n      }\n      return acc;\n    },[]);\n    if(res.length==1){\n      return res[0];\n    }\n    return 0;\n  }\n\n  navChangeHandler = (index) =>{\n   (this.state.activeNavIndex!=index) && this.setState({...this.state, activeNavIndex:index});\n  }\n      \n    onNavOptionClick = (e) =>{   // For Select Dropdowns\n      const selected = (e.target.value) ? JSON.parse(e.target.value):null;\n    //  console.log('MenuNavButtonPanel: ',selected);\n\n    if(selected && selected.navLink && selected.navLink.startsWith(\"#\") && selected.index>=0 ){\n      \n      this.state.activeNavIndex!=selected.index && this.navChangeHandler(selected.index);\n      \n      if(typeof(window)!=\"undefined\" && this.state.activeNavIndex!=selected.index){\n        window.location.href = selected.navLink;\n      }\n      return;\n    }\n    \n    const resourceIdentifier = (selected && selected.resourceIdentifier)? selected.resourceIdentifier.replace('<lang>',this.props.lang||\"en\"):null;\n        \n    try{\n      if(typeof(newsHuntAction)!=='undefined' && typeof(callEvent)!=\"undefined\" && resourceIdentifier){\n            typeof(overlayWithLoader)!=\"undefined\" && overlayWithLoader();\n            callEvent(\"nhcommand://openwebitemfromresource:webItemRI=\" + resourceIdentifier);\n      }else{\n          if(typeof(window)!=\"undefined\" && this.state.activeNavIndex!=selected.index){\n            typeof(overlayWithLoader)!=\"undefined\" && overlayWithLoader();\n            window.location.href = selected.navLink;\n          }\n      }\n    }catch(err){\n      console.log(\"MenuNavButtonPanel: \",err);\n    }\n  }\n\n  render() {\n    const lang = this.props.lang||\"en\";\n    //console.log(\"MenuNavButtonPanel: \",toJS(this.props.data));\n    if(this.state.isIosDevice && this.props.data && this.props.data[0] && this.props.data[0].navLink && this.props.data[0].navLink.startsWith(\"#\")){\n      return null; // Hide for iOS if its detail page (only id based click to jump will hide)\n    }\n    \n    return (\n      <>\n     {!this.state.isCarouselSupported && <DropDown className=\"sticky\" style={this.props.isSticky?sticky:{}}>\n         <select onChange={(e)=>this.onNavOptionClick(e)}>\n           {this.props.data && this.props.data.map((element, index) => (\n               <option selected={this.state.activeNavIndex==index} key={index} value={JSON.stringify({index:index,navLink:element.navLink,resourceIdentifier:element.resourceIdentifier,lang:lang})} >{element.buttonName[lang]??element.buttonName} </option>)\n       )}\n         </select>\n       </DropDown>}\n\n    {this.state.isCarouselSupported && <SliderStyled className=\"sticky\" style={this.props.isSticky?sticky:{}}>\n      {this.props.data &&\n      this.props.data.map((el,index) => (\n      <SliderItem style={{minWidth: \"25%\", textAlign: \"center\", border: 'none',boxShadow:'none',padding:'10px 0px', marginRight:'8px'}}>\n      <MenuNavButton\n        navLink={el.navLink}\n        buttonName={el.buttonName ? (el.buttonName[lang]??el.buttonName):\"\"}\n        active={(this.state.activeNavIndex==index)?\"active\":\"\"}\n        navChangeHandler={this.navChangeHandler}\n        index={index}\n        resourceIdentifier={el.resourceIdentifier}\n        lang={lang}\n      />\n      </SliderItem>\n      ))}\n      </SliderStyled>}\n      </>\n    )\n  }\n}\n\n\nconst sticky = {\n  position: 'sticky',top:'0',backgroundColor:'#fff',zIndex:'999'\n}\n\nexport default MenuNavButtonPanel;\n\n\n"],"names":["MenuNavButtonPanel","props","index","state","activeNavIndex","setState","e","selected","target","value","JSON","parse","navLink","startsWith","navChangeHandler","window","location","href","resourceIdentifier","replace","lang","newsHuntAction","callEvent","overlayWithLoader","err","console","log","getActiveIndex","isCarouselSupported","isIosDevice","tmpIsIosDevice","tmpIsCarouselSupported","isIos","this","res","data","reduce","acc","curr","i","active","length","push","DropDown","className","style","isSticky","sticky","onChange","onNavOptionClick","map","element","key","stringify","buttonName","SliderStyled","el","SliderItem","minWidth","textAlign","border","boxShadow","padding","marginRight","React","Component","position","top","backgroundColor","zIndex"],"sourceRoot":""}