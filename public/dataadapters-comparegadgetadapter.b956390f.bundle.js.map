{"version":3,"file":"dataadapters-comparegadgetadapter.b956390f.bundle.js","mappings":"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","sources":["webpack://1at06cs097/./dataAdapters/CompareGadgetAdapter.js"],"sourcesContent":["import axios from \"axios\";\n\nclass CompareGadgetAdapter {\n  async adaptData(attachAttrib={}, apiData, compareUrl, _brandsUrl, product, models, modelSide) {\n    let leftSide = false;\n    let modelsParam = models;\n    let rightSide = false;\n\n    if (modelSide == \"loadBoth\") {\n      leftSide = true;\n      rightSide = true;\n    } else if (modelSide == \"modelLeft\") {\n      // get data for left side product\n      leftSide = true;\n      if (!attachAttrib.showDropdownsRight && attachAttrib.itemSelectedRight.id) {\n        // Right Side Item is already there\n        modelsParam = modelsParam + \",\" + attachAttrib.itemSelectedRight.id;\n      }\n    } else if (modelSide == \"modelRight\") {\n      // get data for right side product\n      rightSide = true;\n      if (!attachAttrib.showDropdownsLeft && attachAttrib.itemSelectedLeft.id) {\n        // Left Side Item is already there\n        modelsParam = attachAttrib.itemSelectedLeft.id + \",\" + modelsParam;\n      }\n    }\n\n    if (attachAttrib.showDropdownsLeft && attachAttrib.showDropdownsRight && models) {\n      // If both dropdowns are active\n      modelsParam = `${models},${models}`;\n    }\n\n    const url = compareUrl\n      .replace(\"<product>\", product || attachAttrib.product)\n      .replace(\"<models>\", modelsParam);\n\n    let brandsUrl;\n    if (_brandsUrl && product && leftSide && rightSide) {\n      brandsUrl = _brandsUrl.replace(\"<product>\", product);\n    }\n\n    let attributes;\n\n    try {\n      const response = await axios.get(url);\n      const data = response?.data?.data;\n      // brandsUrl && console.log(\"brandsUrl\", brandsUrl);\n      let brandsResponse;\n\n      if (leftSide && rightSide && brandsUrl) {\n        brandsResponse = await axios.get(brandsUrl);\n      }\n\n      const item1 = data[0].item;\n      const item2 = data.length > 1 && data[1].item;\n\n      attributes = {\n        itemSelectedLeft: item1\n          ? {\n              id: item1.id,\n              image: item1.photo,\n              name: item1.name,\n              product: product || attachAttrib.product,\n            }\n          : {},\n        itemSelectedRight: item2\n          ? {\n              id: item2.id,\n              image: item2.photo,\n              name: item2.name,\n              product: product || attachAttrib.product,\n            }\n          : {},\n        showDropdownsLeft: leftSide ? false : attachAttrib.showDropdownsLeft,\n        showDropdownsRight: rightSide ? false : attachAttrib.showDropdownsRight,\n        brands: leftSide && rightSide ? brandsResponse?.data?.data : attachAttrib.brands,\n        modelLeft: null,\n        modelRight: null,\n        product: product || attachAttrib.product,\n        compareAccordion: this.getBothAccordianContent(item1?item1.specifications:null, item2?item2.specifications:null),\n      };\n    } catch (err) {\n      console.log(\"CompareGadgetAdapter : \", err);\n    }\n    return attributes;\n  }\n\n  formatString(_word) {\n    let word = _word.replace(\"_\", \" \").split(\" \");\n    word = word\n      .map((word) => {\n        return word[0].toUpperCase() + word.substring(1);\n      })\n      .join(\" \");\n    return word;\n  }\n\n  getBothAccordianContent(spec1, spec2) {\n    let compareAccordion = {};\n    let itemLabels = [];\n\n    let keys = [];\n\n    for (let key_l1 in spec1) {\n      itemLabels.push(this.formatString(key_l1));\n\n      let level2 = [];\n      for (let key_l2 in spec1[key_l1]) {\n        level2.push(key_l2);\n      }\n      for (let key_l2 in spec2[key_l1]) {\n        !level2.includes(key_l2) && level2.push(key_l2);\n      }\n      keys.push({\n        level1: key_l1,\n        level2: level2,\n      });\n    }\n\n    // console.log(\"KEYS: \", keys);\n\n    compareAccordion.itemLabels = itemLabels;\n    compareAccordion.currentAccOpen = 0;\n    compareAccordion.children = [];\n    compareAccordion.accordainWrpClassName=\"compareResult\";\n    // let index = 0;\n\n    try {\n      keys.forEach((el) => {\n        // // general, body\n        const key_l1 = el.level1;\n        let rows = [];\n        for (const key_l2 of el.level2) {\n          // general[key_l1]\n    \n          const specName = this.formatString(key_l2)||\"\";\n          const valProduct1 = (spec1 && spec1[key_l1] && spec1[key_l1][key_l2]) ? spec1[key_l1][key_l2]:\"NA\";\n          const valProduct2 = (spec2 && spec2[key_l1] && spec2[key_l1][key_l2]) ? spec2[key_l1][key_l2]:\"NA\";\n          \n            const product1 = {\n              specName: specName,\n              value: valProduct1,\n            };\n          \n            const product2 = {\n              specName: specName,\n              value: valProduct2,\n            };\n\n          rows.push({ product1, product2 });\n        }\n        compareAccordion.children.push({\n          attributes: {\n            rows: rows,\n          },\n        });\n      });\n    } catch (err) {\n      console.log(\"getBothAccordianContent: \", err);\n    }\n    return compareAccordion;\n  }\n}\n\nexport default CompareGadgetAdapter;\n\n"],"names":["CompareGadgetAdapter","attachAttrib","compareUrl","_brandsUrl","product","models","modelSide","leftSide","modelsParam","rightSide","showDropdownsRight","itemSelectedRight","id","showDropdownsLeft","itemSelectedLeft","url","replace","brandsUrl","axios","get","response","data","brandsResponse","item1","item","item2","length","attributes","image","photo","name","brands","modelLeft","modelRight","compareAccordion","this","getBothAccordianContent","specifications","console","log","_word","word","split","map","toUpperCase","substring","join","spec1","spec2","itemLabels","keys","key_l1","push","formatString","level2","key_l2","includes","level1","currentAccOpen","children","accordainWrpClassName","forEach","el","rows","specName","valProduct1","valProduct2","product1","value","product2","err"],"sourceRoot":""}